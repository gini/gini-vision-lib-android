apply plugin: 'maven'

// In order to upload to the repo, you need a file ~/.gradle/gradle.properties with
//
// repoUser=<your user name>
// repoPassword=<your password>
// mavenSnapshotsRepoUrl=<url for snapshots>
// mavenReleasesRepoUrl=<url for releases>
// mavenOpenRepoUrl=<url for open releases>
uploadArchives {
    repositories {
        mavenDeployer {
            pom.groupId = groupId
            pom.artifactId = artifactId
            pom.version = version

            pom.project {
                licenses {
                    license {
                        name 'Private License'
                        url 'https://raw.githubusercontent.com/gini/gini-vision-lib-android/master/LICENSE.md'
                        distribution 'repo'
                    }
                }
                organization {
                    name 'Gini GmbH'
                    url 'https://www.gini.net/'
                }
            }

            println "Repo user credentials:"
            println "   user: " + project.hasProperty('repoUser') ? repoUser : 'invalidUserName'
            println "   password: " + project.hasProperty('repoPassword') ? repoPassword : 'invalidPassword'

            if (project.hasProperty('mavenSnapshotsRepoUrl')) {
                repository(url: mavenSnapshotsRepoUrl) {
                    authentication(
                            userName: project.hasProperty('repoUser') ? repoUser : "invalidUserName",
                            password: project.hasProperty('repoPassword') ? repoPassword : "invalidPassword"
                    )
                    uniqueVersion = false
                }
            }

            if (project.hasProperty('mavenReleasesRepoUrl')) {
                repository(url: mavenReleasesRepoUrl) {
                    authentication(
                            userName: project.hasProperty('repoUser') ? repoUser : 'invalidUserName',
                            password: project.hasProperty('repoPassword') ? repoPassword : 'invalidPassword'
                    )
                }
            }

            if (project.hasProperty('mavenOpenRepoUrl')) {
                repository(url: mavenOpenRepoUrl) {
                    authentication(
                            userName: project.hasProperty('repoUser') ? repoUser : 'invalidUserName',
                            password: project.hasProperty('repoPassword') ? repoPassword : 'invalidPassword'
                    )
                }
            }
        }
    }
}
